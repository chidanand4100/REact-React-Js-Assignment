[{"C:\\Users\\terralogic\\react-assignment-one\\src\\reportWebVitals.js":"1","C:\\Users\\terralogic\\react-assignment-one\\src\\App.js":"2","C:\\Users\\terralogic\\react-assignment-one\\src\\components\\TeacherDashboard.js":"3","C:\\Users\\terralogic\\react-assignment-one\\src\\components\\StudentDashboard.js":"4"},{"size":362,"mtime":499162500000,"results":"5","hashOfConfig":"6"},{"size":1622,"mtime":1606623917768,"results":"7","hashOfConfig":"6"},{"size":2006,"mtime":1606633835441,"results":"8","hashOfConfig":"6"},{"size":156,"mtime":1606621861507,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1kww87t",{"filePath":"12","messages":"13","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"14","messages":"15","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\terralogic\\react-assignment-one\\src\\reportWebVitals.js",[],"C:\\Users\\terralogic\\react-assignment-one\\src\\App.js",["19"],"C:\\Users\\terralogic\\react-assignment-one\\src\\components\\TeacherDashboard.js",["20","21"],"import React, { useState } from \"react\";\r\nimport \"./todoapp.css\";\r\n\r\nfunction TeacherDashBoard() {\r\n  const [task, setTask] = useState(\"\");\r\n  const [tasklist, setTaskList] = useState([]);\r\n\r\n  const handleChange = (e) => {\r\n    setTask(e.target.value);\r\n  };\r\n\r\n  const AddTask = () => {\r\n    if (task !== \"\") {\r\n      const taskDetails = {\r\n        id: Math.floor(Math.random() * 1000),\r\n        value: task,\r\n        isCompleted: false,\r\n      };\r\n\r\n      setTaskList([...tasklist, taskDetails]);\r\n    }\r\n  };\r\n\r\n  const deletetask = (e, id) => {\r\n    e.preventDefault();\r\n    setTaskList(tasklist.filter((t) => t.id != id));\r\n  };\r\n\r\n  const taskCompleted = (e, id) => {\r\n    e.preventDefault();\r\n    //let's find index of element\r\n    const element = tasklist.findIndex((elem) => elem.id == id);\r\n\r\n    //copy array into new variable\r\n    const newTaskList = [...tasklist];\r\n\r\n    //edit our element\r\n    newTaskList[element] = {\r\n      ...newTaskList[element],\r\n      isCompleted: true,\r\n    };\r\n\r\n    setTaskList(newTaskList);\r\n  };\r\n\r\n  return (\r\n    <div className=\"todo\">\r\n      <h1>WELCOME TO TEACHER DASHBOARD</h1>\r\n      <input\r\n        type=\"text\"\r\n        name=\"text\"\r\n        id=\"text\"\r\n        onChange={(e) => handleChange(e)}\r\n        placeholder=\"Add task here...\"\r\n      />\r\n      <button className=\"add-btn\" onClick={AddTask}>\r\n        Add\r\n      </button>\r\n      <br />\r\n      {tasklist !== [] ? (\r\n        <ul>\r\n          {tasklist.map((t) => (\r\n            <li className={t.isCompleted ? \"crossText\" : \"listitem\"}>\r\n              {t.value}\r\n              <button\r\n                className=\"completed\"\r\n                onClick={(e) => taskCompleted(e, t.id)}\r\n              >\r\n                Completed\r\n              </button>\r\n\r\n              <button className=\"delete\" onClick={(e) => deletetask(e, t.id)}>\r\n                Delete\r\n              </button>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TeacherDashBoard;","C:\\Users\\terralogic\\react-assignment-one\\src\\components\\StudentDashboard.js",[],{"ruleId":"22","severity":1,"message":"23","line":2,"column":38,"nodeType":"24","messageId":"25","endLine":2,"endColumn":45},{"ruleId":"26","severity":1,"message":"27","line":26,"column":45,"nodeType":"28","messageId":"29","endLine":26,"endColumn":47},{"ruleId":"26","severity":1,"message":"30","line":32,"column":58,"nodeType":"28","messageId":"29","endLine":32,"endColumn":60},"no-unused-vars","'Navlink' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='."]